1. String Length
The length property returns the length of a string:

Example
var txt = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
var sln = txt.length;


2.Finding a String in a String
The indexOf() method returns the index of (the position of) the first occurrence of a specified text in a string:

Example
var str = "Please locate where 'locate' occurs!";
var pos = str.indexOf("locate");


3 .Searching for a String in a String
The search() method searches a string for a specified value and returns the position of the match:

Example
var str = "Please locate where 'locate' occurs!";
var pos = str.search("locate");


4 .The slice() Method
slice() extracts a part of a string and returns the extracted part in a new string.

The method takes 2 parameters: the start position, and the end position (end not included).

This example slices out a portion of a string from position 7 to position 12 (13-1):

Example
var str = "Apple, Banana, Kiwi";
var res = str.slice(7, 13);

5.The substring() Method
substring() is similar to slice().

The difference is that substring() cannot accept negative indexes.

Example
var str = "Apple, Banana, Kiwi";
var res = str.substring(7, 13);


6.The substr() Method
substr() is similar to slice().

The difference is that the second parameter specifies the length of the extracted part.

Example
var str = "Apple, Banana, Kiwi";
var res = str.substr(7, 6);

7.Replacing String Content
The replace() method replaces a specified value with another value in a string:

Example
str = "Please visit Microsoft!";
var n = str.replace("Microsoft", "W3Schools");


8.The concat() Method
concat() joins two or more strings:

Example
var text1 = "Hello";
var text2 = "World";
var text3 = text1.concat(" ", text2);


9.String.trim()
The trim() method removes whitespace from both sides of a string:

Example
var str = "       Hello World!        ";
alert(str.trim());



10.The charAt() Method
The charAt() method returns the character at a specified index (position) in a string:

Example
var str = "HELLO WORLD";
str.charAt(0);            // returns H





 *************************************Array methods*********************************************************
1. Converting Arrays to Strings
The JavaScript method toString() converts an array to a string of (comma separated) array values.

Example
var fruits = ["Banana", "Orange", "Apple", "Mango"];
document.getElementById("demo").innerHTML = fruits.toString();


2.The join() method also joins all array elements into a string.

It behaves just like toString(), but in addition you can specify the separator:

Example
var fruits = ["Banana", "Orange", "Apple", "Mango"];
document.getElementById("demo").innerHTML = fruits.join(" * ");


3.Popping
The pop() method removes the last element from an array:

Example
var fruits = ["Banana", "Orange", "Apple", "Mango"];
fruits.pop();              // Removes the last element ("Mango") from fruits

4.Pushing
The push() method adds a new element to an array (at the end):

Example
var fruits = ["Banana", "Orange", "Apple", "Mango"];
fruits.push("Kiwi");       //  Adds a new element ("Kiwi") to fruits


5.Shifting Elements
Shifting is equivalent to popping, working on the first element instead of the last.

The shift() method removes the first array element and "shifts" all other elements to a lower index.

Example
var fruits = ["Banana", "Orange", "Apple", "Mango"];
fruits.shift();            // Removes the first element "Banana" from fruits

6.Deleting Elements
Since JavaScript arrays are objects, elements can be deleted by using the JavaScript operator delete:

Example
var fruits = ["Banana", "Orange", "Apple", "Mango"];
delete fruits[0];           // Changes the first element in fruits to undefined

7.Splicing an Array
The splice() method can be used to add new items to an array:

Example
var fruits = ["Banana", "Orange", "Apple", "Mango"];
fruits.splice(2, 0, "Lemon", "Kiwi");
